Index: src/main/java/InterfaceServer/InterfaceServer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package InterfaceServer;\nimport Bolbolestan.Bolbolestan;\nimport Bolbolestan.Student;\nimport Bolbolestan.Course;\nimport Bolbolestan.Grade;\nimport Bolbolestan.exeptions.BolbolestanCourseNotFoundError;\nimport Bolbolestan.exeptions.BolbolestanRulesViolationError;\nimport Bolbolestan.exeptions.BolbolestanStudentNotFoundError;\nimport com.google.common.io.Files;\nimport com.google.common.io.Resources;\nimport com.google.gson.Gson;\nimport com.google.gson.GsonBuilder;\nimport com.google.gson.reflect.TypeToken;\nimport io.javalin.Javalin;\nimport HTTPRequestHandler.HTTPRequestHandler;\nimport org.apache.commons.io.FileUtils;\n\nimport java.io.File;\nimport java.nio.charset.StandardCharsets;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class InterfaceServer {\n    private Javalin app;\n    private Bolbolestan bolbolestan = new Bolbolestan();\n    private HTMLPageHandler HTMLHandler = new HTMLPageHandler();\n\n    public void start(final String STUDENTS_URL, final String COURSES_URL, final String GRADES_URL, int port) {\n        try {\n            System.out.println(\"Importing Students...\");\n            importStudentsFromWeb(STUDENTS_URL);\n            System.out.println(\"Importing Courses...\");\n            importCoursesFromWeb(COURSES_URL);\n            System.out.println(\"Importing Grades...\");\n            importGradesFromWeb(GRADES_URL);\n            runServer(port);\n        } catch (Exception e) {\n            System.out.println(e.getMessage());\n        }\n    }\n\n    public void runServer(final int port) throws Exception {\n        assignCoursesForTests(\"810196285\");\n        app = Javalin.create().start(port);\n        app.get(\"/courses\", ctx -> {\n            try {\n                ctx.html(generateCoursesPage());\n            } catch (Exception e){\n                System.out.println(e.getMessage());\n                ctx.status(502);\n            }\n        });\n        app.get(\"/course/:code/:classCode\", ctx -> {\n            try {\n                ctx.html(generateCoursePage(ctx.pathParam(\"code\"), ctx.pathParam(\"classCode\")));\n            } catch (BolbolestanCourseNotFoundError e) {\n                ctx.html(readHTMLPage(\"404.html\"));\n            } catch (Exception e){\n                System.out.println(e.getMessage());\n                ctx.status(502).result(\":| \" + e.getMessage());\n            }\n        });\n\n        app.get(\"/change_plan/:studentId\", ctx -> {\n            String studentId = ctx.pathParam(\"studentId\");\n            try {\n                ctx.html(generateChangePlanPage(studentId));\n            } catch (BolbolestanStudentNotFoundError e) {\n                ctx.html(readHTMLPage(\"404.html\"));\n            } catch (Exception e){\n                System.out.println(e.getMessage());\n                ctx.status(502).result(\":| \" + e.getMessage());\n            }\n        });\n\n        app.post(\"/change_plan/:studentId\", ctx -> {\n            try {\n                String studentId = ctx.pathParam(\"studentId\");\n                String code = ctx.formParam(\"course_code\") + '-'\n                        + ctx.formParam(\"class_code\");\n                bolbolestan.removeFromWeeklySchedule(studentId, code);\n            } catch (Exception e) {\n                System.out.println(e.getMessage());\n            }\n            ctx.redirect(\"/change_plan/\" + ctx.pathParam(\"studentId\"));\n        });\n        app.get(\"/profile/:studentId\", ctx -> {\n            try {\n                ctx.html(generateProfile(ctx.pathParam(\"studentId\")));\n            } catch (BolbolestanCourseNotFoundError e) {\n                ctx.html(readHTMLPage(\"404.html\"));\n            } catch (BolbolestanStudentNotFoundError e) {\n                ctx.html(readHTMLPage(\"404.html\"));\n            } catch (Exception e){\n                System.out.println(e.getMessage());\n                ctx.status(502).result(\":| \" + e.getMessage());\n            }\n        });\n//        app.post(\"/course/:code/:classCode\", ctx -> {\n//            try {\n////                ctx.html(generateCoursePage(ctx.pathParam(\"code\"), ctx.pathParam(\"classCode\")));\n//                ctx.\n//            } catch (BolbolestanCourseNotFoundError e) {\n//                ctx.html(readHTMLPage(\"404.html\"));\n//            } catch (Exception e){\n//                System.out.println(e.getMessage());\n//                ctx.status(502).result(\":| \" + e.getMessage());\n//            }\n//        });\n\n        app.get(\"/submit/:studentId\", ctx -> {\n            String studentId = ctx.pathParam(\"studentId\");\n            try {\n                ctx.html(generateSubmitPage(studentId));\n            } catch (BolbolestanStudentNotFoundError e) {\n                ctx.html(readHTMLPage(\"404.html\"));\n            } catch (Exception e){\n                System.out.println(e.getMessage());\n                //ctx.status(502).result(\":| \" + e.getMessage());\n            }\n        });\n\n        app.post(\"/submit/:studentId\", ctx -> {\n            String studentId = ctx.pathParam(\"studentId\");\n            try {\n                bolbolestan.handleFinalize(studentId);\n                ctx.redirect(\"/submit_ok\");\n            } catch (Exception e){\n                System.out.println(e.getMessage());\n                ctx.redirect(\"/submit_failed\");\n                //ctx.status(502).result(\":| \" + e.getMessage());\n            }\n        });\n\n        app.get(\"/submit_ok\", ctx -> {\n            try {\n                ctx.html(readHTMLPage(\"submit_ok.html\"));\n            } catch (Exception e){\n                System.out.println(e.getMessage());\n                ctx.status(502).result(\":| \" + e.getMessage());\n            }\n        });\n\n        app.get(\"/submit_failed\", ctx -> {\n            try {\n                ctx.html(readHTMLPage(\"submit_failed.html\"));\n            } catch (Exception e){\n                System.out.println(e.getMessage());\n                ctx.status(502).result(\":| \" + e.getMessage());\n            }\n        });\n    }\n\n    private String generateProfile(String studentId) throws Exception {\n        if(!bolbolestan.doesStudentExist(studentId))\n            throw new BolbolestanStudentNotFoundError();\n        Student student = bolbolestan.getStudentById(studentId);\n        String profileHTML = readHTMLPage(\"profile_start.html\");\n\n        HashMap<String, String> studentProfile = new HashMap<>();\n        studentProfile.put(\"id\", student.getId());\n        studentProfile.put(\"name\", student.getName());\n        studentProfile.put(\"secondName\", student.getSecondName());\n        studentProfile.put(\"birthDate\", student.getBirthDate());\n        studentProfile.put(\"GPA\", Float.toString(student.getGPA()));\n        studentProfile.put(\"totalUnits\", Integer.toString(bolbolestan.getUnitsPassed(studentId)));\n\n        profileHTML = HTMLHandler.fillTemplate(profileHTML, studentProfile);\n        String profileItem = readHTMLPage(\"profile_item.html\");\n        for (Grade grade : student.getGrades()) {\n            studentProfile = new HashMap<>();\n            studentProfile.put(\"code\", grade.getCode());\n            studentProfile.put(\"grade\", Integer.toString(grade.getGrade()));\n            profileItem += HTMLHandler.fillTemplate(profileItem, studentProfile);\n        }\n        return profileHTML + readHTMLPage(\"profile_end.html\");\n    }\n\n//    private String generateAddCourseToSchedulePage(\n//            String courseCode, String classCode, String studentId) throws Exception {\n//        if (!bolbolestan.doesCourseExist(courseCode, classCode))\n//            throw new BolbolestanCourseNotFoundError();\n//        if(!bolbolestan.doesStudentExist(studentId))\n//            throw new BolbolestanStudentNotFoundError();\n//        Course course = bolbolestan.getCourseByIdentifier(courseCode, classCode);\n//        Student student = bolbolestan.getStudentById(studentId);\n//        ArrayList<Course>\n//    }\n\n    private String generateCoursesPage() throws Exception {\n        String coursesHTML = readHTMLPage(\"courses_start.html\");\n        Map<String, Course> coursesMap = bolbolestan.getCourses();\n        ArrayList<Course> courses = new ArrayList<>(coursesMap.values());\n        String courseItemString = readHTMLPage(\"courses_item.html\");\n\n        for (Course course : courses) {\n            HashMap<String, String> courseContent = new HashMap<>();\n            courseContent.put(\"code\", course.getCode());\n            courseContent.put(\"classCode\", course.getClassCode());\n            courseContent.put(\"name\", course.getName());\n            courseContent.put(\"units\", Integer.toString(course.getUnits()));\n            courseContent.put(\"capacity\", Integer.toString(course.getCapacity() - course.getSeatsTaken()));\n            courseContent.put(\"type\", course.getType());\n            courseContent.put(\"classDays\", course.getClassDayString(\"|\"));\n            courseContent.put(\"classTime\", course.getClassTime().getTime());\n            courseContent.put(\"examTimeStart\", course.getExamTime().getStart());\n            courseContent.put(\"examTimeEnd\", course.getExamTime().getEnd());\n            courseContent.put(\"prerequisites\", course.getPrerequisitesString());\n            coursesHTML += HTMLHandler.fillTemplate(courseItemString, courseContent);\n        }\n        coursesHTML += readHTMLPage(\"courses_end.html\");\n        return coursesHTML;\n    }\n\n    private String generateCoursePage(String courseCode, String classCode) throws Exception {\n        if (!bolbolestan.doesCourseExist(courseCode, classCode))\n            throw new BolbolestanCourseNotFoundError();\n        \n        Course course = bolbolestan.getCourseByIdentifier(courseCode, classCode);\n        String courseHTML = readHTMLPage(\"course.html\");\n        HashMap<String, String> courseContent = new HashMap<>();\n        courseContent.put(\"code\", course.getCode());\n        courseContent.put(\"classCode\", course.getClassCode());\n        courseContent.put(\"units\", Integer.toString(course.getUnits()));\n        courseContent.put(\"classDays\", course.getClassDayString(\", \"));\n        courseContent.put(\"classTime\", course.getClassTime().getTime());\n        courseHTML = HTMLHandler.fillTemplate(courseHTML, courseContent);\n        return courseHTML;\n    }\n\n    private String generateChangePlanPage(String studentId) throws Exception {\n        if (!bolbolestan.doesStudentExist(studentId))\n            throw new BolbolestanStudentNotFoundError();\n\n        String changePlanHTML = readHTMLPage(\"change_plan_start.html\");\n        List<Course> courses = bolbolestan.handleGetWeeklySchedule(studentId).getOfferings();\n        String planItemString = readHTMLPage(\"change_plan_item.html\");\n        for (Course course: courses) {\n            HashMap<String, String> planContent = new HashMap<>();\n            planContent.put(\"code\", course.getCode());\n            planContent.put(\"classCode\", course.getClassCode());\n            planContent.put(\"name\", course.getName());\n            planContent.put(\"units\", Integer.toString(course.getUnits()));\n            changePlanHTML += HTMLHandler.fillTemplate(planItemString, planContent);\n        }\n        changePlanHTML += readHTMLPage(\"change_plan_end.html\");\n        return changePlanHTML;\n    }\n\n    private String generateSubmitPage(String studentId) throws Exception {\n        if (!bolbolestan.doesStudentExist(studentId))\n            throw new BolbolestanStudentNotFoundError();\n\n        String submitHTML = readHTMLPage(\"submit.html\");\n        HashMap<String, String> submitContent = new HashMap<>();\n        submitContent.put(\"studentId\", studentId);\n        submitContent.put(\"totalUnits\", Integer.toString(bolbolestan.getTotalUnits(studentId)));\n        submitHTML = HTMLHandler.fillTemplate(submitHTML, submitContent);\n        return submitHTML;\n    }\n\n    private String readHTMLPage(String fileName) throws Exception {\n        File file = new File(Resources.getResource(\"templates/\" + fileName).toURI());\n        return FileUtils.readFileToString(file, StandardCharsets.UTF_8);\n    }\n\n    private void importStudentsFromWeb(final String studentsURL) throws Exception{\n        String StudentsJsonString = HTTPRequestHandler.getRequest(studentsURL);\n        Gson gson = new GsonBuilder().setPrettyPrinting().create();\n        List<Student> students = gson.fromJson(StudentsJsonString, new TypeToken<List<Student>>() {\n        }.getType());\n        int counter = 1;\n        for (Student student : students) {\n            System.out.println(counter + \"----------------\");\n            counter++;\n            student.print();\n            try {\n                bolbolestan.addStudent(student);\n            } catch (Exception e) {\n                System.out.println(e.getMessage());\n            }\n        }\n    }\n\n    private void importCoursesFromWeb(final String coursesURL) throws Exception{\n        String coursesJsonString = HTTPRequestHandler.getRequest(coursesURL);\n        Gson gson = new GsonBuilder().setPrettyPrinting().create();\n        List<Course> courses = gson.fromJson(coursesJsonString, new TypeToken<List<Course>>() {\n        }.getType());\n        int counter = 1;\n        for (Course course : courses) {\n            System.out.println(counter + \"----------------\");\n            counter++;\n            course.print();\n            try {\n                bolbolestan.addCourse(course);\n            } catch (Exception e) {\n                System.out.println(e.getMessage());\n            }\n        }\n    }\n\n    private void assignCoursesForTests(String studentId) throws Exception {\n        bolbolestan.addToWeeklySchedule(studentId, \"8101028-01\");\n        bolbolestan.addToWeeklySchedule(studentId, \"8101020-01\");\n        bolbolestan.addToWeeklySchedule(studentId, \"8101031-01\");\n        bolbolestan.addToWeeklySchedule(studentId, \"8101021-01\");\n    }\n\n    private void importGradesFromWeb(final String gradesURL) throws Exception {\n        Map<String, Student> students = bolbolestan.getStudents();\n        for (Map.Entry<String, Student> entry : students.entrySet()) {\n            String gradesJsonString = HTTPRequestHandler.getRequest(\n                    gradesURL + \"/\" + entry.getKey());\n            Gson gson = new GsonBuilder().setPrettyPrinting().create();\n            List<Grade> grades = gson.fromJson(gradesJsonString, new TypeToken<List<Grade>>() {\n            }.getType());\n            int counter = 1;\n            System.out.println(String.format(\"Student : %s\", entry.getKey()));\n            for (Grade grade : grades) {\n                System.out.println(counter + \"----------------\");\n                counter++;\n                grade.print();\n                try {\n                    bolbolestan.addGradeToStudent(students.get(entry.getKey()), grade);\n                } catch (Exception e) {\n                    System.out.println(e.getMessage());\n                }\n            }\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/InterfaceServer/InterfaceServer.java b/src/main/java/InterfaceServer/InterfaceServer.java
--- a/src/main/java/InterfaceServer/InterfaceServer.java	(revision 4ca4826b066b387844c6a5d8680aad432bf75c89)
+++ b/src/main/java/InterfaceServer/InterfaceServer.java	(date 1615053292701)
@@ -154,8 +154,10 @@
     }
 
     private String generateProfile(String studentId) throws Exception {
-        if(!bolbolestan.doesStudentExist(studentId))
+        if(!bolbolestan.doesStudentExist(studentId)){
+            System.out.println("student was not found");
             throw new BolbolestanStudentNotFoundError();
+        }
         Student student = bolbolestan.getStudentById(studentId);
         String profileHTML = readHTMLPage("profile_start.html");
 
@@ -173,7 +175,7 @@
             studentProfile = new HashMap<>();
             studentProfile.put("code", grade.getCode());
             studentProfile.put("grade", Integer.toString(grade.getGrade()));
-            profileItem += HTMLHandler.fillTemplate(profileItem, studentProfile);
+            profileHTML += HTMLHandler.fillTemplate(profileItem, studentProfile);
         }
         return profileHTML + readHTMLPage("profile_end.html");
     }
Index: src/main/java/Bolbolestan/Bolbolestan.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Bolbolestan;\n\nimport com.google.gson.Gson;\nimport Bolbolestan.exeptions.*;\n\n\nimport java.util.*;\n\npublic class Bolbolestan {\n    private Map<String, Student> students = new HashMap<>();\n    private Map<String, Course> courses = new HashMap<>();\n\n    public Map<String, Course> getCourses() { return courses; }\n    public Map<String, Student> getStudents() { return students; }\n\n    public Student getStudentById(String studentId) { return students.get(studentId); }\n\n    public Course getCourseByIdentifier(String identifier) {\n        return courses.get(identifier);\n    }\n\n    public Course getCourseByIdentifier(String courseCode, String classCode) {\n        return courses.get(courseCode + \"-\" + classCode);\n    }\n\n    public boolean doesCourseExist(String courseCode, String classCode) {\n        String identifier = courseCode + \"-\" + classCode;\n        return courses.containsKey(identifier);\n    }\n\n    public boolean doesStudentExist(String studentId) {\n        return students.containsKey(studentId);\n    }\n\n    public String addCourse(Course course) throws Exception {\n        if (doesCourseExist(course.getCode(), course.getClassCode()))\n            throw new BolbolestanRulesViolationError(String.\n                    format(\"Offering with the code %s already exists.\", course.getCode()));\n        courses.put(course.getCode()+\"-\"+course.getClassCode(), course);\n        return \"Offering successfully added.\";\n    }\n\n    public String addStudent(Student student) throws Exception {\n        if (students.containsKey(student.getId()))\n            throw new BolbolestanRulesViolationError(String.format(\"Student with id %s already exists.\", student.getId()));\n        students.put(student.getId(), student);\n        return \"Student successfully added.\";\n    }\n\n    public void addGradeToStudent(Student student, Grade grade) {\n        student.addGrade(grade);\n    }\n\n    public List<Course> getOfferings(String studentId, Gson gson) throws Exception {\n        if (!students.containsKey(studentId))\n            throw new BolbolestanStudentNotFoundError();\n        List<Course> courseList = new ArrayList<Course>(courses.values());\n        Collections.sort(courseList);\n        return courseList;\n    }\n\n    public Course getOffering(String studentId, String courseCode, Gson gson) throws Exception {\n        if (!students.containsKey(studentId))\n            throw new BolbolestanStudentNotFoundError();\n        Course course = courses.get(courseCode);\n\n        if (course == null)\n            throw new BolbolestanCourseNotFoundError();\n\n        return course;\n    }\n\n    public String addToWeeklySchedule(String studentId, String offeringCode) throws Exception {\n        if (!students.containsKey(studentId))\n            throw new BolbolestanStudentNotFoundError();\n        if (!courses.containsKey(offeringCode))\n            throw new BolbolestanCourseNotFoundError();\n        Student student = students.get(studentId);\n        Course course = courses.get(offeringCode);\n        student.addToWeeklySchedule(course);\n        return \"Course successfully added to weekly schedule.\";\n    }\n\n    public String removeFromWeeklySchedule(String studentId, String offeringCode) throws Exception {\n        if (!students.containsKey(studentId))\n            throw new BolbolestanStudentNotFoundError();\n        if (!courses.containsKey(offeringCode))\n            throw new BolbolestanCourseNotFoundError();\n        Student student = students.get(studentId);\n        Course course = courses.get(offeringCode);\n        student.removeFromWeeklySchedule(course);\n        return \"Course successfully removed from weekly schedule.\";\n    }\n\n    public WeeklySchedule handleGetWeeklySchedule(String studentId) throws Exception {\n        if (!students.containsKey(studentId))\n            throw new BolbolestanStudentNotFoundError();\n        Student student = students.get(studentId);\n        return student.getWeeklySchedule();\n    }\n\n    public String handleFinalize(String studentId) throws Exception {\n        if (!students.containsKey(studentId))\n            throw new BolbolestanStudentNotFoundError();\n        Student student = students.get(studentId);\n        student.getWeeklySchedule().finalizeWeeklySchedule();\n        return \"Weekly schedule successfully finalized.\";\n    }\n\n    public int getUnitsPassed(String studentId) throws Exception {\n        int unitsPassed = 0;\n        if (!students.containsKey(studentId))\n            throw new BolbolestanStudentNotFoundError();\n        Student student = students.get(studentId);\n        ArrayList<Grade> studentGrades = student.getGrades();\n        for (Grade gradeItem : studentGrades) {\n            String courseCode = gradeItem.getCode();\n            if (!courses.containsKey(courseCode))\n                throw new BolbolestanCourseNotFoundError();\n            Course course = getCourseByIdentifier(gradeItem.getCode());\n            if (gradeItem.getGrade() >= 10)\n                unitsPassed += course.getUnits();\n        }\n        return unitsPassed;\n    }\n\n    public int getTotalUnits(String studentId) throws Exception{\n        WeeklySchedule weeklySchedule = handleGetWeeklySchedule(studentId);\n        int units = weeklySchedule.getTotalUnits();\n        return units;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Bolbolestan/Bolbolestan.java b/src/main/java/Bolbolestan/Bolbolestan.java
--- a/src/main/java/Bolbolestan/Bolbolestan.java	(revision 4ca4826b066b387844c6a5d8680aad432bf75c89)
+++ b/src/main/java/Bolbolestan/Bolbolestan.java	(date 1615052986987)
@@ -115,9 +115,11 @@
         ArrayList<Grade> studentGrades = student.getGrades();
         for (Grade gradeItem : studentGrades) {
             String courseCode = gradeItem.getCode();
-            if (!courses.containsKey(courseCode))
+            if (!courses.containsKey(courseCode+"-01")) {
+                System.out.println("course was not found");
                 throw new BolbolestanCourseNotFoundError();
-            Course course = getCourseByIdentifier(gradeItem.getCode());
+            }
+            Course course = getCourseByIdentifier(gradeItem.getCode()+"-01");
             if (gradeItem.getGrade() >= 10)
                 unitsPassed += course.getUnits();
         }
Index: src/main/java/Bolbolestan/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Bolbolestan;\n\nimport Bolbolestan.exeptions.*;\n\nimport java.util.ArrayList;\n\npublic class Student {\n    private final String id;\n    private final String name;\n    private final String secondName;\n    private final String birthDate;\n    private WeeklySchedule weeklySchedule = new WeeklySchedule();\n    private ArrayList<Grade> grades = new ArrayList<Grade>();\n\n    public Student(String id, String name, String secondName, String birthDate) {\n        this.id = id;\n        this.name = name;\n        this.secondName = secondName;\n        this.birthDate = birthDate;\n    }\n\n    public String getName() { return name; }\n    public String getSecondName() { return secondName; }\n    public String getBirthDate() { return birthDate; }\n    public ArrayList<Grade> getGrades() { return grades; }\n\n    public float getGPA() {\n        int count = 0;\n        int gradeSum = 0;\n        for (Grade grade : grades) {\n            gradeSum += grade.getGrade();\n            count += 1;\n        }\n        if (count != 0)\n            return gradeSum/count;\n        else\n             return 0;\n    }\n\n    public void print() {\n        System.out.println(String.format(\"student id : %s\", id));\n        System.out.println(String.format(\"student name : %s %s\", name, secondName));\n        System.out.println(String.format(\"birth date : %s\", birthDate));\n    }\n\n    public WeeklySchedule getWeeklySchedule() {\n        return weeklySchedule;\n    }\n\n    public String getId() {\n        return this.id;\n    }\n\n    public void addGrade(Grade grade) {\n        if (grades == null)\n            grades = new ArrayList<Grade>();\n        grades.add(grade);\n    }\n\n    public void addToWeeklySchedule(Course course) {\n        if (weeklySchedule == null)\n            weeklySchedule = new WeeklySchedule();\n        //if (hasPrerequisites(course) && !weeklySchedule.doesCourseTimeCollide(course) && )\n        weeklySchedule.addToWeeklySchedule(course);\n        course.reduceCapacity();\n    }\n\n    private boolean hasPrerequisites(Course course) {\n        ArrayList<String> prerequisites = course.getPrerequisites();\n        for (String prerequisite : prerequisites) {\n            boolean hasPassed = false;\n            for (Grade grade : grades) {\n                if (grade.getCode().equals(prerequisite))\n                    if (grade.getGrade() >= 10) {\n                        hasPassed = true;\n                        continue;\n                    }\n                if (!hasPassed)\n                    return false;\n            }\n        }\n        return true;\n    }\n\n    public void removeFromWeeklySchedule(Course course) throws Exception {\n        if (weeklySchedule == null)\n            throw new BolbolestanCourseNotFoundError();\n        weeklySchedule.removeFromWeeklySchedule(course);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Bolbolestan/Student.java b/src/main/java/Bolbolestan/Student.java
--- a/src/main/java/Bolbolestan/Student.java	(revision 4ca4826b066b387844c6a5d8680aad432bf75c89)
+++ b/src/main/java/Bolbolestan/Student.java	(date 1615053053795)
@@ -32,7 +32,7 @@
             count += 1;
         }
         if (count != 0)
-            return gradeSum/count;
+            return (float) gradeSum/(float) count;
         else
              return 0;
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"7d4017a9-8681-4459-83a3-90a1ec311232\" name=\"Default Changelist\" comment=\"Add change plan page\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Bolbolestan/Bolbolestan.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Bolbolestan/Bolbolestan.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Bolbolestan/Student.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Bolbolestan/Student.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Bolbolestan/WeeklySchedule.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Bolbolestan/WeeklySchedule.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/InterfaceServer/InterfaceServer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/InterfaceServer/InterfaceServer.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$1.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$2.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$2.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$3.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$3.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"ProjectId\" id=\"1pIYGLCiPUrsBGEY6ybbE5SKDkT\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"Downloaded.Files.Path.Enabled\" value=\"true\" />\n    <property name=\"Repository.Attach.Annotations\" value=\"false\" />\n    <property name=\"Repository.Attach.JavaDocs\" value=\"false\" />\n    <property name=\"Repository.Attach.Sources\" value=\"false\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../../../internet-engineering/CA2/src/main/java/Bolbolestan/WeeklySchedule.java\" />\n    <property name=\"project.structure.last.edited\" value=\"Global Libraries\" />\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources/templates\" />\n      <recent name=\"$PROJECT_DIR$/src/main/templates/components\" />\n      <recent name=\"$PROJECT_DIR$/src/main/java/Bolbolestan\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"CA2\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"ArquillianJUnit\" factoryName=\"\" nameIsGenerated=\"true\">\n      <option name=\"arquillianRunConfiguration\">\n        <value>\n          <option name=\"containerStateName\" value=\"\" />\n        </value>\n      </option>\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"7d4017a9-8681-4459-83a3-90a1ec311232\" name=\"Default Changelist\" comment=\"\" />\n      <created>1614871976680</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1614871976680</updated>\n      <workItem from=\"1614871977916\" duration=\"20237000\" />\n      <workItem from=\"1614934290848\" duration=\"2573000\" />\n      <workItem from=\"1614937732680\" duration=\"2398000\" />\n      <workItem from=\"1614951558920\" duration=\"8025000\" />\n      <workItem from=\"1614971352397\" duration=\"293000\" />\n      <workItem from=\"1614971972732\" duration=\"410000\" />\n      <workItem from=\"1614972825159\" duration=\"9953000\" />\n      <workItem from=\"1615038007235\" duration=\"1920000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Add change plan page\">\n      <created>1614985101300</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614985101300</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Add change plan page\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Add change plan page\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4ca4826b066b387844c6a5d8680aad432bf75c89)
+++ b/.idea/workspace.xml	(date 1615053291957)
@@ -8,8 +8,8 @@
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/Bolbolestan/Bolbolestan.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Bolbolestan/Bolbolestan.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/Bolbolestan/Student.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Bolbolestan/Student.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Bolbolestan/WeeklySchedule.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Bolbolestan/WeeklySchedule.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/InterfaceServer/InterfaceServer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/InterfaceServer/InterfaceServer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/Bolbolestan/Bolbolestan.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Bolbolestan/Bolbolestan.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$1.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$2.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$3.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/InterfaceServer/InterfaceServer$3.class" afterDir="false" />
@@ -70,17 +70,6 @@
     <configuration name="Unnamed" type="Application" factoryName="Application" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Main" />
       <module name="CA2" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration default="true" type="ArquillianJUnit" factoryName="" nameIsGenerated="true">
-      <option name="arquillianRunConfiguration">
-        <value>
-          <option name="containerStateName" value="" />
-        </value>
-      </option>
-      <option name="TEST_OBJECT" value="class" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
